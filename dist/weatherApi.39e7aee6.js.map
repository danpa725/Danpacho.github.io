{"version":3,"sources":["../config.js","scripts/weatherApi.js"],"names":["WEATHER_API_KEY","LOCATION","weather","document","querySelector","getWeatherApi","lat","lon","fetch","API_KEY","then","res","json","innerText","tempInfo","main","temp","locationInfo","name","weatherInfo","description","tempLocationSpan","createElement","weatherSpan","appendChild","saveLocation","LocationObj","localStorage","setItem","JSON","stringify","handleGetLocationSucess","position","coords","latitude","longitude","userLocation","handleGetLocationFail","console","log","err","getUserLocation","navigator","geolocation","getCurrentPosition","loadLocationFromDb","getItem","parseLocation","parse","init"],"mappings":";;ACAA;;AACA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAhB;ADFO,IAAMJ,eAAe,GAAG,kCAAxB;ACIP,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAc;AAChCC,EAAAA,KAAK,+DAAwDF,GAAxD,kBAAmEC,GAAnE,oBAAgFE,uBAAhF,yBAAL,CAEKC,IAFL,CAEU,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GAFV,EAGKF,IAHL,CAGU,UAACE,IAAD,EAAU;AACZV,IAAAA,OAAO,CAACW,SAAR,GAAoB,EAApB;AACA,QAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAL,CAAUC,IAA3B;AACA,QAAMC,YAAY,GAAGL,IAAI,CAACM,IAA1B;AACA,QAAMC,WAAW,GAAGP,IAAI,CAACV,OAAL,CAAa,CAAb,EAAgBkB,WAApC;AAEA,QAAMC,gBAAgB,GAAGlB,QAAQ,CAACmB,aAAT,CAAuB,MAAvB,CAAzB;AACA,QAAMC,WAAW,GAAGpB,QAAQ,CAACmB,aAAT,CAAuB,MAAvB,CAApB;AAEAD,IAAAA,gBAAgB,CAACR,SAAjB,aAAgCI,YAAhC,cAAgDH,QAAhD;AACAS,IAAAA,WAAW,CAACV,SAAZ,aAA2BM,WAA3B;AAEAjB,IAAAA,OAAO,CAACsB,WAAR,CAAoBH,gBAApB;AACAnB,IAAAA,OAAO,CAACsB,WAAR,CAAoBD,WAApB;AACH,GAjBL;AAkBH,CAnBD;;AAqBA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD,EAAiB;AAClCC,EAAAA,YAAY,CAACC,OAAb,CAAqB3B,QAArB,EAA+B4B,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAA/B;AACH,CAFD;;AAIA,IAAMK,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,QAAD,EAAc;AAAA,yBACVA,QAAQ,CAACC,MADC;AAAA,MAClCC,QADkC,oBAClCA,QADkC;AAAA,MACxBC,SADwB,oBACxBA,SADwB;AAG1C,MAAMC,YAAY,GAAG;AACjBF,IAAAA,QAAQ,EAARA,QADiB;AAEjBC,IAAAA,SAAS,EAATA;AAFiB,GAArB;AAIAV,EAAAA,YAAY,CAACW,YAAD,CAAZ;AACA/B,EAAAA,aAAa,CAAC6B,QAAD,EAAWC,SAAX,CAAb;AACH,CATD;;AAWA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAN;AAAA,CAA9B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BC,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACIb,uBADJ,EAEIM,qBAFJ;AAIH,CALD;;AAOA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B,MAAMT,YAAY,GAAGT,YAAY,CAACmB,OAAb,CAAqB7C,QAArB,CAArB;;AAEA,MAAImC,YAAY,KAAK,IAArB,EAA2B;AACvBK,IAAAA,eAAe;AAClB,GAFD,MAEO;AACH,QAAMM,aAAa,GAAGlB,IAAI,CAACmB,KAAL,CAAWZ,YAAX,CAAtB;AACA/B,IAAAA,aAAa,CAAC0C,aAAa,CAACb,QAAf,EAAyBa,aAAa,CAACZ,SAAvC,CAAb;AACH;AACJ,CATD;;AAWA,IAAMc,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfJ,EAAAA,kBAAkB;AACrB,CAFD;;AAIAI,IAAI","file":"weatherApi.39e7aee6.js","sourceRoot":"..\\src","sourcesContent":["export const WEATHER_API_KEY = \"046d3fe338852441cdf9a272ace1c5ab\";\r\n","import { WEATHER_API_KEY as API_KEY } from \"../../config\";\r\nconst LOCATION = \"LOCATION\";\r\nconst weather = document.querySelector(\".js-weather\");\r\n\r\nconst getWeatherApi = (lat, lon) => {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric\r\n    `)\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            weather.innerText = \"\";\r\n            const tempInfo = json.main.temp;\r\n            const locationInfo = json.name;\r\n            const weatherInfo = json.weather[0].description;\r\n\r\n            const tempLocationSpan = document.createElement(\"span\");\r\n            const weatherSpan = document.createElement(\"span\");\r\n\r\n            tempLocationSpan.innerText = `${locationInfo} ${tempInfo}Â°C`;\r\n            weatherSpan.innerText = `${weatherInfo}`;\r\n\r\n            weather.appendChild(tempLocationSpan);\r\n            weather.appendChild(weatherSpan);\r\n        });\r\n};\r\n\r\nconst saveLocation = (LocationObj) => {\r\n    localStorage.setItem(LOCATION, JSON.stringify(LocationObj));\r\n};\r\n\r\nconst handleGetLocationSucess = (position) => {\r\n    const { latitude, longitude } = position.coords;\r\n\r\n    const userLocation = {\r\n        latitude,\r\n        longitude,\r\n    };\r\n    saveLocation(userLocation);\r\n    getWeatherApi(latitude, longitude);\r\n};\r\n\r\nconst handleGetLocationFail = () => console.log(err);\r\n\r\nconst getUserLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(\r\n        handleGetLocationSucess,\r\n        handleGetLocationFail\r\n    );\r\n};\r\n\r\nconst loadLocationFromDb = () => {\r\n    const userLocation = localStorage.getItem(LOCATION);\r\n\r\n    if (userLocation === null) {\r\n        getUserLocation();\r\n    } else {\r\n        const parseLocation = JSON.parse(userLocation);\r\n        getWeatherApi(parseLocation.latitude, parseLocation.longitude);\r\n    }\r\n};\r\n\r\nconst init = () => {\r\n    loadLocationFromDb();\r\n};\r\n\r\ninit();\r\n"]}